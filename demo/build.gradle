plugins {
	id 'com.google.cloud.tools.jib' version '1.8.0'
	id 'org.springframework.boot' version '2.2.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// buildVersion = System.getenv("BUILD_VERSION") ?: "0"

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

bootRun { doFirst { jvmArgs = ['-Dspring.profiles.active=local'] } }

jib {
    from {
        // image = "docker://openjdk:8-jre-alpine"
        image = "openjdk:8-jre-alpine"
    }
    to {
        image = "yoon5/cloud-stream-jib"
        // tags = ["${project.version}".toString(), "${BUILD_VERSION}".toString()]
        tags = ["${project.version}".toString()]
        credHelper = "pass"
    }
    container {
        mainClass = "com.example.demo.DemoApplication"
        ports = ["8080"]
        volumes = ["/tmp"]
		environment = [
            // "JAVA_TOOL_OPTIONS": "-Xmx2048m -XX:+UseG1GC",
            // "SPRING_PROFILES_ACTIVE": "dev",
            "TZ": "Asia/Seoul"
        ]
    }
}